{"version":3,"sources":["yourdata.js","components/Header.js","components/About.js","components/project.js","components/work.js","components/Contact.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["name","headerTagline","contactEmail","abouttext","aboutImage","ShowAboutImage","projects","id","title","service","imageSrc","url","social","Header","state","className","bottom","cascade","data","href","rel","Component","About","src","alt","Project","this","props","Work","map","project","Contact","link","index","target","Navbar","scrollToTop","scroll","activeClass","to","spy","smooth","offset","duration","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f97c4892.chunk.js","sourcesContent":["export default\n    {\n        //(Please Do Not Remove The comma(,) after every variable)\n        //Change The Website Template\n        name :'Petar Zivkovic',\n        headerTagline: [//Line 1 For Header\n                        'Hi 👋 You found me! I am Petar Zivkovic.',\n                        //Line 2 For Header\n                        'Full Stack Developer. ',\n                        //Line 3 For Header\n                        ''\n    ],\n        //Contact Email\n        contactEmail:'petarzivkovic85@gmail.com',\n        // Add Your About Text Here\n        abouttext: \"My name is Petar Zivkovic. I live in Puyallup, WA with my lovely wife and our pets. I was born and raised in Serbia, before moving to the Puget Sound in 2014. Growing up in Europe gave me a real passion for history and traveling. I love learning and consider myself a student for life.I am currently enrolled in the vigorus Trilogy Coding Boot Camp through University of Washington. I feel empowered by the tools I have been given during this experience. Now, I am actively seeking new employment oppertunities that will let me flex my creative muscles. Prior to getting into the IT feild, I worked construction installing residential Natural Gas. When the COVID-19 pandamic hit, my world, our world, changed dramatically. During that time I was able to focus on what I really wanted to do. I started researching how I could get my foot into the IT world. I was looking at colleges, but quickly realized that boot camps offered a wealth of knowledge and techniques in an efficent timeframe. I decided to hold off on enrolling in college so I could first aquire relavent certificates, get into the industry and then continue to a Bachalor's degree. My personal and professional background has challenged me to adapt many times. Through hard work and perseverance, I have overcome these obstacles and succeeded. I'm excited to see what the future will bring.\",\n         aboutImage: \"https://scontent-sea1-1.xx.fbcdn.net/v/t1.0-9/10402851_703317486399539_9179750060711457858_n.jpg?_nc_cat=108&ccb=2&_nc_sid=cdbe9c&_nc_ohc=aAQ3jtVA6CwAX9Mb7t5&_nc_ht=scontent-sea1-1.xx&oh=834db1e6a2d4c307b0af1c48e6594432&oe=5FDBBFEE\",\n       //Change This To Hide The Image of About Section (True Or False)\n       ShowAboutImage:true,//true or false (Change Here)\n       // Change Projects Here \n       projects:[\n           {\n            id: 1,//DO NOT CHANGE THIS (Please)😅\n            title:'Weather Dashboard', //Project Title - Add Your Project Title Here\n             service:'In this app, the user enters the name of a city (either just the city name, or \"city, state\") in the search field, then clicks the search button. The app will display the current weather conditions in that city, including temperature, humidity, UV index, and a picture representing whether it is clear, cloudy, raining, etc. Additionally, a 5-day forecast for that city is displayed below the current conditions showing similar information (predicted at 12:00 PM on each day).', // Add Your Service Type Here\n            //Project Image - Add Your Project Image Here\n             imageSrc:\"\",\n             //Project URL - Add Your Project Url Here\n             url:'https://petar85.github.io/stormy-weather/'\n            },\n            {\n                id: 2,//DO NOT CHANGE THIS (Please)😅\n                title: 'Achording to Jazz',\n                service: 'Our goal with this project is to create a simple, accessible tool that can be used for learning basic music theory at an approximately 5th-grade level. By way of a virtual keyboard, users can designate note combinations, and upon submission, an analysis of the chord (root and quality, or interval type if less than 3 unique notes) will be displayed. The program displays an exact match if one can be found, and the most likely result with side list of less likely results if no exact match exists. Upon recieving a chordal input, users can also seek out further information about each chord, with a piano representation, a sound byte example, and in certain situations a definition.',\n                imageSrc: \"\",\n                url: 'https://gnuartemis.github.io/Music-Chord-Identifier/index.html'\n            },\n            { \n                id: 3,//DO NOT CHANGE THIS (Please)😅\n                title: 'Password Generator',\n                service: 'This project solves the security concern of weak passwords. Given that a user needs a new, secured password, they will be promted to determine certain character types required for the password and then a new random password will be generated.',\n                imageSrc: \"./components/images/PargaPic.jpg\",\n                url: 'https://petar85.github.io/only-password/'\n            },\n            {\n                id: 4,//DO NOT CHANGE THIS (Please)😅\n                title: 'Team Profile Generator',\n                service: 'In this project we are building a software engineering team generator command line application. The application will prompt the user for information about the team manager and then information about the team members. When the user has completed building the team, the application will create an HTML file that displays a nicely formatted team roster based on the information provided by the user.',\n                \n                url: 'https://petar85.github.io/old-friends-profile/'\n           },\n           {\n               id: 5,\n               title: 'Patched',\n               service: 'P-Patch is the name given to the City of Seattle community gardens. Community gardens are spaces where neighbors come together to grow community and plan, plant, and maintain a piece of open space. With sharply escalating population growth and the development boom, Seattle has been experiencing a high demand for P-Patch plots. Our contribution to the P-Patch Program is to help address the demand challenges. By streamlining communication we aim to make it easier and more efficient for enthusiastic gardeners to connect.',\n               imageSrc: \"\",\n               url: \"https://patchedapp.herokuapp.com/\"\n            },\n            {\n                id: 6,\n                title: 'Employee Directory',\n                service: 'This app utilizes an API to populate random users and then create a directory. Other users on the app can search for employees by \"name\" and also organize each field (Name, Email, DOB) in ascending or descending order.',\n                imageSrc:\"\",\n                url: \"https://snoozer-directory.herokuapp.com/\"\n            },\n\n                    /*\n\n                    If You Want To Add More Project just Copy and Paste This At The End (Update the id Respectively)\n            \n                */\n        ],\n        social: [\n            // Add Or Remove The Link Accordingly\n            {   name:'Github',\n                url:'https://github.com/Petar85'},\n            {\n                name: 'Linkedin',\n                url: 'https://www.linkedin.com/in/petar-zivkovic-6b88ba1b3/'\n            },\n            // {\n            //     name: 'Dribbble',\n            //     url: 'https://dribbble.com/chetanverma'\n            // },\n            // {\n            //     name: 'Instagram',\n            //     url: 'https://www.instagram.com/cv.uidesign/'\n            // }\n\n        ]\n    }","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport data from '../yourdata'\n\n\nclass Header extends Component {\n    state = {}\n\n    render() {\n        return (<div>\n        <h1 className='heading-background'>PETAR</h1>\n            <header>\n                <h1>\n                    <Fade bottom cascade>{data.name}</Fade></h1>\n            </header>\n            <Fade bottom>\n            <p className='header-title'>\n            {data.headerTagline[0]}<br></br>{data.headerTagline[1]}<br></br>\n            {data.headerTagline[2]}\n               <br></br>\n                    <button><a href={`mailto:${data.contactEmail}`} rel=\"noopener noreferrer\" >Contact</a></button>\n                </p>\n            </Fade>\n\n\n\n        </div>);\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport data from '../yourdata';\n\nclass About extends Component {\n    state = {  }\n    render() { \n        return (<div className='about'>\n            <div className='about-content'>\n            <h1><Fade bottom cascade>About.</Fade></h1>\n            <Fade bottom>\n                    <p>{data.abouttext}</p>\n            </Fade>\n            </div>\n            {data.ShowAboutImage ? <img src={data.aboutImage} alt='about iamge'></img> : null}\n            \n\n        </div>  );\n    }\n}\n \nexport default About;","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\n\nclass Project extends Component {\n    state = {  }\n    render() { \n        return ( \n        <Fade bottom>\n        <div className='project'>\n        <a href={this.props.url}>\n            <img src={this.props.imageSrc} alt={this.props.title}></img>\n            </a>\n            <h1>{this.props.title}</h1>\n            <span>{this.props.service}</span>\n        </div> \n            </Fade>);\n    }\n}\n \nexport default Project;","import React, { Component } from 'react';\nimport Project from './project';\nimport Fade from 'react-reveal/Fade';\nimport data from '../yourdata';\n\nclass Work extends Component {\n    state = {  }\n    render() { \n        return (<div>\n        <h1 className='heading'>\n        <Fade bottom cascade>Work.</Fade></h1>\n        <div className='work-content'>\n                {data.projects.map((project)=>(\n                    <Project key={project.id}\n                             title = {project.title}\n                             service = {project.service}\n                             imageSrc = {project.imageSrc}\n                             url={project.url}\n                     ></Project>\n                ))}\n        </div>\n        </div>  );\n    }\n}\n \nexport default Work;","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport data from '../yourdata';\n\nclass Contact extends Component {\n    state = {  }\n    render() { \n        return (  <div>\n        <h1>\n                <Fade bottom cascade> Contact.</Fade>\n        </h1>\n        <Fade bottom>\n        <div className='contact-content'>\n                <h1>\n                I would love to collaborate with you. <br></br>\n                <span className='amazing-color'>Feel free to reach out.</span></h1>\n                    <a href={`mailto:${data.contactEmail}`} className='email'>{data.contactEmail}</a>\n                <ul>\n                    {data.social.map((link,index)=>(\n                        <li key={index}><a target='_blank' rel=\"noopener noreferrer\" href={link.url}>{link.name}</a></li>\n                    ))}   \n                </ul>\n        </div>\n        </Fade>\n\n            <span className='footer'>Made With ❤ by <a href=\"https://drive.google.com/file/d/13OphX3BMYHYJIipNKsT_swP86Bt-U7g0/view?usp=sharing\">Petar Zivkovic</a></span>\n        </div>);\n    }\n}\n \nexport default Contact;","import React, { Component } from 'react';\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nclass Navbar extends Component {\n    state = {  }\n    scrollToTop = () => {\n        scroll.scrollToTop();\n    };\n    render() { \n        return (<nav>\n            <ul>\n                <li><Link\n                    className='link'\n                    activeClass=\"active\"\n                    to=\"homw\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}\n                    onClick={this.scrollToTop}\n                >Home</Link></li>\n                <li><Link\n                    className='link'\n                    activeClass=\"active\"\n                    to=\"About\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}\n                >About</Link></li>\n                <li><Link\n                    className='link'\n                    activeClass=\"active\"\n                    to=\"work\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}\n                >Work</Link></li>\n                <li><Link\n                    className='link'\n                    activeClass=\"active\"\n                    to=\"contact\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}\n                >Contact</Link></li>\n            </ul>\n        </nav> );\n    }\n}\n \nexport default Navbar;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport About from './components/About';\nimport Work from './components/work';\nimport Contact from './components/Contact';\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <div className=\"App-header\">\n      <Header></Header>\n      </div>\n      \n      <div className='About'>\n        <About></About>\n      </div>\n      <div className='work'>\n        <Work></Work>\n      </div>\n      <div className='contact'>\n        <Contact></Contact>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}